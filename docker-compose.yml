version: '3.8'

services:
  # 백엔드 서비스
  user-backend:
  # ECR에 올라간 이미지를 사용할 것이므로 build 대신 image 사용
    image: 481961344502.dkr.ecr.ap-northeast-2.amazonaws.com/user-backend:latest
    restart: "no"
    environment:
    # GitHub Secrets에 저장된 DB 정보를 컨테이너에 전달
      - SPRING_DATASOURCE_URL=${DB_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "https://user-backend:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  management-backend: # 2. 관리자/사업자 백엔드
    image: 481961344502.dkr.ecr.ap-northeast-2.amazonaws.com/management-backend:latest
    restart: "no"
    environment:
      - SPRING_DATASOURCE_URL=${DB_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT}
      - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
      - AWS_SECRET_S3_ACCESS_KEY=${AWS_SECRET_S3_ACCESS_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "https://management-backend:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      user-backend:
        condition: service_healthy

  # 프론트엔드 서비스
  user-frontend:
    image: 481961344502.dkr.ecr.ap-northeast-2.amazonaws.com/user-frontend:latest
    restart: always
    
  admin-frontend: # 2. 관리자 프론트엔드
    image: 481961344502.dkr.ecr.ap-northeast-2.amazonaws.com/admin-frontend:latest 
    restart: always

  business-frontend: # 3. 사업자 프론트엔드
    image: 481961344502.dkr.ecr.ap-northeast-2.amazonaws.com/business-frontend:latest
    restart: always

  # Nginx 리버스 프록시
  nginx:
    image: nginx:1.21-alpine
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      user-backend:
        condition: service_healthy
      management-backend:
        condition: service_started
      user-frontend:
        condition: service_started
      admin-frontend:
        condition: service_started
      business-frontend:
        condition: service_started

  # Certbot (SSL 인증서 발급/갱신)
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: renew --quiet
